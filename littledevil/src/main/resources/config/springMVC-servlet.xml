<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 让springMVC使用默认servlet处理静态资源（Resin处理静态文件的默认servlet的名字叫做resin-file） -->        
	<!-- <mvc:default-servlet-handler default-servlet-name="resin-file"/> -->
	<!-- 匹配URL  /resources/**  的URL被当做静态资源，由Spring读出到内存中再响应http -->
	<!-- <mvc:resources mapping="/res/**/" location="/res/" cache-period="31556926"/> -->
    
	<!-- 扫描所有的controller 但是不扫描service-->
	<context:component-scan base-package="cn.com.hd" >
	 	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	 	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>	
	
	<!-- Default ViewResolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- <mvc:interceptors>
    	<mvc:interceptor>
        	<mvc:mapping path="/**"/>
        	<mvc:exclude-mapping path="/admin"/>
        	<mvc:exclude-mapping path="/user/login/admin"/>
        	<mvc:exclude-mapping path="/appInfomation/v1/**"/>
        	<mvc:exclude-mapping path="/user/v1/**"/>
        	<mvc:exclude-mapping path="/courseTable/v1/**"/>
        	<mvc:exclude-mapping path="/oauth/**"/>
        	<mvc:exclude-mapping path="/appComment/v1/**"/>
            <bean class="cn.com.hd.common.filter.LoginFilter"/>
    	</mvc:interceptor>
	</mvc:interceptors> -->
	<mvc:annotation-driven/>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!--文件上传配置  one of the properties available; the maximum file size in bytes -->
    <property name="maxUploadSize" value="1000000000000000"/>
    </bean>	
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
			<property name="messageConverters">  
				<list>  
					<bean  
						class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />  
					<bean  
						class="org.springframework.http.converter.StringHttpMessageConverter">  
						<property name="supportedMediaTypes">  
							<list>  
								<value>text/html; charset=UTF-8</value>  
							</list>  
						</property>  
					</bean>  
				</list>  
			</property>  
		</bean> 
      
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="1">
		
		<!-- 设置为true以忽略对Accept Header的支持 -->  
    	<property name="ignoreAcceptHeader" value="false" />   
		
		<!-- 在没有扩展名时即: "/blog/1" 时的默认展现形式 -->  
    	<property name="defaultContentType" value="text/html" />  
    	
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		
		 <!-- 用于开启 /blog/123?format=json 的支持 -->  
    	<property name="favorParameter" value="true" />  
    
		<property name="defaultViews">
			 <list>
                <!-- 输出为JSON数据-->
                <bean
                    class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                </bean>
                <!-- 输出为xml数据-->
                <bean id="marshallingView" class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <property name="marshaller">
                        <bean id="xStreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller" >                         
                            <property name="autodetectAnnotations" value="true"/>
                        </bean>
                    </property>
                    <property name="contentType" value="application/xml" />                   
                </bean>                
            </list>
		</property>
	</bean> 
	
</beans>